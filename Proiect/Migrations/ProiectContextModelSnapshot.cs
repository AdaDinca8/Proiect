// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect.Data;

#nullable disable

namespace Proiect.Migrations
{
    [DbContext(typeof(ProiectContext))]
    partial class ProiectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Proiect.Models.Categorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeCategorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("Proiect.Models.CoffeeShop", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coffee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComandaID")
                        .HasColumnType("int");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("ID");

                    b.HasIndex("ComandaID");

                    b.ToTable("CoffeeShop");
                });

            modelBuilder.Entity("Proiect.Models.CoffeeShopCategorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<int>("CoffeeShopID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategorieID");

                    b.HasIndex("CoffeeShopID");

                    b.ToTable("CoffeeShopCategorie");
                });

            modelBuilder.Entity("Proiect.Models.Comanda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("StatusComanda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Comanda");
                });

            modelBuilder.Entity("Proiect.Models.CoffeeShop", b =>
                {
                    b.HasOne("Proiect.Models.Comanda", "Comanda")
                        .WithMany("CoffeeShops")
                        .HasForeignKey("ComandaID");

                    b.Navigation("Comanda");
                });

            modelBuilder.Entity("Proiect.Models.CoffeeShopCategorie", b =>
                {
                    b.HasOne("Proiect.Models.Categorie", "Categorie")
                        .WithMany("CoffeeShopCategorie")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proiect.Models.CoffeeShop", "CoffeeShop")
                        .WithMany("CoffeeShopCategorie")
                        .HasForeignKey("CoffeeShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("CoffeeShop");
                });

            modelBuilder.Entity("Proiect.Models.Categorie", b =>
                {
                    b.Navigation("CoffeeShopCategorie");
                });

            modelBuilder.Entity("Proiect.Models.CoffeeShop", b =>
                {
                    b.Navigation("CoffeeShopCategorie");
                });

            modelBuilder.Entity("Proiect.Models.Comanda", b =>
                {
                    b.Navigation("CoffeeShops");
                });
#pragma warning restore 612, 618
        }
    }
}
